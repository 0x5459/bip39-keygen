name: Release
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+'

  pull_request:
    paths:
    - '.github/workflows/release.yml'

env:
  # Preview mode: Publishes the build output as a CI artifact instead of creating
  # a release, allowing for manual inspection of the output. This mode is
  # activated if the CI run was triggered by events other than pushed tags, or
  # if the repository is a fork.
  preview: ${{ !startsWith(github.ref, 'refs/tags/') || github.repository != '0x5459/bip39-keygen' }}

jobs:
  dist:
    name: Dist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # don't fail other jobs if one fails
      matrix:
        build: [x86_64-linux, x86_64-macos, x86_64-windows] #, x86_64-win-gnu, win32-msvc
        include:
        - build: x86_64-linux
          os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        - build: aarch64-linux
          os: ubuntu-latest
          target: aarch64-unknown-linux-gnu
        # - build: riscv64-linux
        #   os: ubuntu-latest
        #   rust: stable
        #   target: riscv64gc-unknown-linux-gnu
        #   cross: true
        - build: x86_64-macos
          os: macos-latest
          target: x86_64-apple-darwin
        - build: x86_64-windows
          os: windows-latest
          target: x86_64-pc-windows-msvc
        # 23.03: build issues
        - build: aarch64-macos
          os: macos-latest
          target: aarch64-apple-darwin

        # - build: x86_64-win-gnu
        #   os: windows-2019
        #   target: x86_64-pc-windows-gnu
        # - build: win32-msvc
        #   os: windows-2019
        #   target: i686-pc-windows-msvc

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}

      - name: Use Cross
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cross
          cache-key: '${{ matrix.target }}'

      - name: Build release binary
        run: |
          cross build --profile=release --target ${{ matrix.target }} --bins

      - name: Strip release binaries x86_64-linux-gnu
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: strip "target/${{ matrix.target }}/release/bip39-keygen"

      - name: Strip release binaries aarch64-linux-gnu
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          docker run --rm -v \
            "$PWD/target:/target:Z" \
            ghcr.io/cross-rs/${{ matrix.target }}:main \
            aarch64-linux-gnu-strip \
            /target/${{ matrix.target }}/release/bip39-keygen

      - name: Strip release binaries mac
        if: matrix.os == 'macos-latest'
        run: strip -x "target/${{ matrix.target }}/release/bip39-keygen"

      - name: Build archive
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" = "windows-2019" ]; then
            cp "target/${{ matrix.target }}/release/bip39-keygen.exe" "dist/"
          else
            cp "target/${{ matrix.target }}/release/bip39-keygen" "dist/"
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: bins-${{ matrix.build }}
          path: dist

  publish:
    name: Publish
    needs: [dist]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4

      - name: Build archive
        shell: bash
        run: |
          set -ex

          source="$(pwd)"

          cd "$(mktemp -d)"
          mv $source/bins-* .
          mkdir dist

          for dir in bins-* ; do
              platform=${dir#"bins-"}
              if [[ $platform =~ "windows" ]]; then
                  exe=".exe"
              fi
              pkgname=bip39-keygen-${GITHUB_REF_NAME//\//-}-$platform
              mkdir -p $pkgname
              cp $source/LICENSE* $source/README.md $pkgname

              mv bins-$platform/bip39-keygen$exe $pkgname
              chmod +x $pkgname/bip39-keygen$exe

              if [ "$exe" = "" ]; then
                  tar czf dist/$pkgname.tar.gz $pkgname
              else
                  7z a -r dist/$pkgname.zip $pkgname
              fi
          done

      - name: Upload binaries to release
        uses: termux/upload-release-action@v4.1.0
        if: env.preview == 'false'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ github.ref_name }}
          overwrite: true
          checksums: sha256,md5
